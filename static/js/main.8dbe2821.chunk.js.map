{"version":3,"sources":["App.js","index.js"],"names":["appClassName","api","App","climate","useState","weather","setWeather","query","setQuery","search","evt","a","key","fetch","response","json","data","temp","main","includes","concat","className","type","placeholder","onChange","e","target","value","onKeyPress","name","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","ReactDOM","render","document","getElementById"],"mappings":"gPAEIA,EAAe,MACbC,EACC,mCADDA,EAEE,2CAwGOC,EAtGH,WAAO,IAKbC,EALY,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEUF,mBAAS,IAFnB,mBAETG,EAFS,KAEFC,EAFE,KAOVC,EAAM,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACG,UAAZD,EAAIE,IADK,iCAEYC,MAAM,GAAD,OACvBZ,EADuB,qBACFM,EADE,+BAC0BN,IAH3C,cAELa,EAFK,gBAMQA,EAASC,OANjB,OAMLC,EANK,OAOLC,EAAOD,EAAKX,QAAQ,GAAGa,KAS7BlB,EAAe,OARfG,EACW,SAATc,GACS,UAATA,GACS,WAATA,GACS,SAATA,EACIA,EACA,SAIME,SAAS,QAASnB,EAAeA,EAAaoB,OAAO,SACxDjB,EAAQgB,SAAS,SACxBnB,EAAeA,EAAaoB,OAAO,UAC1BjB,EAAQgB,SAAS,UAC1BnB,EAAeA,EAAaoB,OAAO,WAC1BjB,EAAQgB,SAAS,UAC1BnB,EAAeA,EAAaoB,OAAO,UAErCd,EAAWU,GA1BA,4CAAH,sDA8DZ,OACE,yBAAKK,UAAWrB,GACd,8BACE,yBAAKqB,UAAU,cACb,2BACEC,KAAK,OACLD,UAAU,aACVE,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOC,QACnCA,MAAOpB,EACPqB,WAAYnB,KAIS,qBAAjBJ,EAAQwB,KACd,6BACE,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,YAAYhB,EAAQwB,MACnC,yBAAKR,UAAU,QAlDP,SAACS,GACnB,IAuBMC,EATO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UAEeD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAzBS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAamBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEf,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAqBDE,CAAY,IAAIC,QAEzC,yBAAKnB,UAAU,eACb,yBAAKA,UAAU,QAAQhB,EAAQa,KAAKD,KAApC,UACA,yBAAKI,UAAU,WAAWhB,EAAQA,QAAQ,GAAGa,QAIjD,M,YChGVuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8dbe2821.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nlet appClassName = \"App\";\nconst api = {\n  key: \"6e2db6ec7b134042baae6dab408be97c\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\nconst App = () => {\n  const [weather, setWeather] = useState({});\n  const [query, setQuery] = useState(\"\");\n\n  // console.log(query);\n  let climate;\n\n  const search = async (evt) => {\n    if (evt.key === \"Enter\") {\n      const response = await fetch(\n        `${api.base}weather?q=${query}&units=metric&appid=${api.key}`\n      );\n      // console.log(response);\n      const data = await response.json();\n      const temp = data.weather[0].main;\n      climate =\n        temp === \"Rain\" ||\n        temp === \"Clear\" ||\n        temp === \"Clouds\" ||\n        temp === \"Haze\"\n          ? temp\n          : \"Sunny\";\n\n      appClassName = \"App\";\n      // console.log(climate.includes('Rain'));\n      if (climate.includes(\"Rain\")) appClassName = appClassName.concat(\" rain\");\n      else if (climate.includes(\"Clear\")) {\n        appClassName = appClassName.concat(\" clear\");\n      } else if (climate.includes(\"Clouds\")) {\n        appClassName = appClassName.concat(\" clouds\");\n      } else if (climate.includes(\"Haze\")) {\n        appClassName = appClassName.concat(\" haze\");\n      }\n      setWeather(data);\n    }\n  };\n\n  const dateBuilder = (d) => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const days = [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ];\n    const day = days[d.getDay()];\n    const date = d.getDate();\n    const month = months[d.getMonth()];\n    const year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div className={appClassName}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Location...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n\n        {typeof weather.name !== \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{weather.main.temp}&#x2103;</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './index_mobile.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}