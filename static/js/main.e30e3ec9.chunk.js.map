{"version":3,"sources":["App.js","index.js"],"names":["appClassName","api","App","climate","useState","weather","setWeather","query","setQuery","search","evt","a","key","fetch","response","json","data","temp","main","includes","concat","console","log","className","type","placeholder","onChange","e","target","value","onKeyPress","name","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","ReactDOM","render","document","getElementById"],"mappings":"gPAEIA,EAAe,MACbC,EACG,mCADHA,EAEI,2CA0GKC,EAxGH,WAAO,IAKXC,EALU,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEYF,mBAAS,IAFrB,mBAEPG,EAFO,KAEAC,EAFA,KAORC,EAAM,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACK,UAAZD,EAAIE,IADG,iCAEgBC,MAAM,GAAD,OAC7BZ,EAD6B,qBACRM,EADQ,+BACoBN,IAHzC,cAEDa,EAFC,gBAMYA,EAASC,OANrB,OAMDC,EANC,OAODC,EAAOD,EAAKX,QAAQ,GAAGa,KAS7BlB,EAAe,OARfG,EACK,SAATc,GACS,UAATA,GACS,WAATA,GACS,SAATA,EACIA,EACA,SAIYE,SAAS,QAASnB,EAAeA,EAAaoB,OAAO,SACxDjB,EAAQgB,SAAS,SACtBnB,EAAeA,EAAaoB,OAAO,UAC5BjB,EAAQgB,SAAS,UACxBnB,EAAeA,EAAaoB,OAAO,WAC5BjB,EAAQgB,SAAS,UACxBnB,EAAeA,EAAaoB,OAAO,UAGvCC,QAAQC,IAAR,mBAAwBnB,IACxBkB,QAAQC,IAAR,0BAA+BtB,IAC/BM,EAAWU,GA7BJ,4CAAH,sDAiEZ,OACI,yBAAKO,UAAWvB,GACZ,8BACI,yBAAKuB,UAAU,cACX,2BACIC,KAAK,OACLD,UAAU,aACVE,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAInB,EAASmB,EAAEC,OAAOC,QACjCA,MAAOtB,EACPuB,WAAYrB,KAGK,qBAAjBJ,EAAQ0B,KACZ,6BACI,yBAAKR,UAAU,gBACX,yBAAKA,UAAU,YAAYlB,EAAQ0B,MACnC,yBAAKR,UAAU,QAjDnB,SAACS,GACjB,IAuBMC,EATO,CACT,SACA,UACA,YACA,WACA,SACA,WACA,UAEaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAzBS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAaiBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEf,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAoBSE,CAAY,IAAIC,QAE3C,yBAAKnB,UAAU,eACX,yBAAKA,UAAU,QAAQlB,EAAQa,KAAKD,KAApC,UACA,yBAAKM,UAAU,WAAWlB,EAAQA,QAAQ,GAAGa,QAI/D,M,YClGVyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e30e3ec9.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nlet appClassName = 'App';\nconst api = {\n    key: '6e2db6ec7b134042baae6dab408be97c',\n    base: 'https://api.openweathermap.org/data/2.5/',\n};\nconst App = () => {\n    const [weather, setWeather] = useState({});\n    const [query, setQuery] = useState('');\n\n  // console.log(query);\n    let climate;\n\n    const search = async (evt) => {\n        if (evt.key === 'Enter') {\n            const response = await fetch(\n        `${api.base}weather?q=${query}&units=metric&appid=${api.key}`,\n      );\n      // console.log(response);\n            const data = await response.json();\n            const temp = data.weather[0].main;\n            climate =\n        temp === 'Rain' ||\n        temp === 'Clear' ||\n        temp === 'Clouds' ||\n        temp === 'Haze'\n          ? temp\n          : 'Sunny';\n\n            appClassName = 'App';\n      // console.log(climate.includes('Rain'));\n            if (climate.includes('Rain')) appClassName = appClassName.concat(' rain');\n            else if (climate.includes('Clear')) {\n                appClassName = appClassName.concat(' clear');\n            } else if (climate.includes('Clouds')) {\n                appClassName = appClassName.concat(' clouds');\n            } else if (climate.includes('Haze')) {\n                appClassName = appClassName.concat(' haze');\n            }\n\n            console.log(`Climate: ${climate}`);\n            console.log(`App Class Name: ${appClassName}`);\n            setWeather(data);\n        }\n    };\n\n    const dateBuilder = (d) => {\n        const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        const days = [\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n            'Sunday',\n        ];\n        const day = days[d.getDay()];\n        const date = d.getDate();\n        const month = months[d.getMonth()];\n        const year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`;\n    };\n\n    return (\n        <div className={appClassName}>\n            <main>\n                <div className=\"search-box\">\n                    <input\n                        type=\"text\"\n                        className=\"search-bar\"\n                        placeholder=\"Search...\"\n                        onChange={e => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search} />\n                </div>\n\n                {typeof weather.name !== 'undefined' ? (\n                    <div>\n                        <div className=\"location-box\">\n                            <div className=\"location\">{weather.name}</div>\n                            <div className=\"date\">{dateBuilder(new Date())}</div>\n                        </div>\n                        <div className=\"weather-box\">\n                            <div className=\"temp\">{weather.main.temp}&#x2103;</div>\n                            <div className=\"weather\">{weather.weather[0].main}</div>\n                        </div>\n                    </div>\n        ) : (\n          ''\n        )}\n            </main>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './index_mobile.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}